{
	"info": {
		"_postman_id": "29f511d3-7510-42bd-bc49-1e409d65e622",
		"name": "Reqres_MadalinaGherghel",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22430260"
	},
	"item": [
		{
			"name": "GetListUsers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Check status text\",function(){\r",
							"    pm.expect(pm.response.status).to.eql(\"OK\")\r",
							"})\r",
							"var resp=pm.response.json()\r",
							"pm.test(\"Checking data type1\",function(){\r",
							"pm.expect(resp).to.be.an(\"object\")\r",
							"console.log('If the test fails this will not be executed')\r",
							"pm.expect(resp.data).to.be.an(\"array\")\r",
							"})\r",
							"pm.test(\"Checking values\",function(){\r",
							"console.log(\"check email with index 0\",resp.data[0].email)\r",
							"pm.expect(resp.data[0].email).to.eql(\"michael.lawson@reqres.in\")\r",
							"pm.expect(resp.data[1].email).to.eql(\"lindsay.ferguson@reqres.in\")\r",
							"pm.expect(resp.data[2].email).to.eql(\"tobias.funke@reqres.in\")\r",
							"pm.expect(resp.data[3].email).to.eql(\"byron.fields@reqres.in\")\r",
							"pm.expect(resp.data[1].first_name).to.eql(\"Lindsay\")\r",
							"})\r",
							"console.log('Array size:', resp.data.length)\r",
							"for(var i=0;i<resp.data.length;i++){\r",
							"    console.log(\"loop through array for first name\",resp.data[i].first_name)\r",
							"}\r",
							"\r",
							"var first_name=[\"Michael\",\"Lindsay\",\"Tobias\",\"Byron\",\"George\",\"Rachel\"]\r",
							"pm.test('Checking all first name',function(){\r",
							"for(var i=0;i<resp.data.lengt;i++){\r",
							"console.log(resp.data[i].first_name)\r",
							"    pm.expect(resp.data[i].first_name).to.eql(first_name[i])\r",
							"}\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseUrl}}/api/users?page=2",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetSingleUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Check status text\",function(){\r",
							"    pm.expect(pm.response.status).to.eql(\"OK\")\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseUrl}}/api/users/:id",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"api",
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetSingleUserNotFound",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"pm.test(\"Check status text\",function(){\r",
							"    pm.expect(pm.response.status).to.eql(\"Not Found\")\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseUrl}}/api/users/23",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"api",
						"users",
						"23"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetListResource",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var resp=pm.response.json()\r",
							"pm.test(\"Checking data type1\",function(){\r",
							"pm.expect(resp).to.be.an(\"object\")\r",
							"console.log('If the test fails this will not be executed')\r",
							"pm.expect(resp.data).to.be.an(\"array\")\r",
							"})\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseUrl}}/api/unknown",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"api",
						"unknown"
					]
				}
			},
			"response": []
		},
		{
			"name": "DelayedResponse",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Check status text\",function(){\r",
							"    pm.expect(pm.response.status).to.eql(\"OK\")\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseUrl}}/api/users?delay=3",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "delay",
							"value": "3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Check status text\",function(){\r",
							"    pm.expect(pm.response.status).to.eql(\"OK\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Mada\",\r\n    \"job\": \"unknown\"\r\n   \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/api/users/2",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "PartiallyUpdateUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Check status text\",function(){\r",
							"    pm.expect(pm.response.status).to.eql(\"OK\")\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{name}}\"\r\n   \r\n   \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/api/users/2",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"})\r",
							"pm.test(\"Check status text\",function(){\r",
							"    pm.expect(pm.response.status).to.eql(\"No Content\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{BaseUrl}}/api/users2",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"api",
						"users2"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log()\r",
							"console.info()\r",
							"console.warn()\r",
							"console.error()"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"job\": \"manager\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}/api/users",
					"host": [
						"{{BaseUrl}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register-Successful",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"eve.holt@reqres.in\");\r",
							"});\r",
							"pm.test('Check any of one status code',function(){\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201,202])\r",
							"})\r",
							"pm.test(\"Check status text\",function(){\r",
							"    pm.expect(pm.response.status).to.eql(\"Created\")\r",
							"})\r",
							"var abc=pm.response.json()\r",
							"pm.test(\"Checking data type1\",function(){\r",
							"pm.expect(abc).to.be.an(\"object\")\r",
							"console.log('If the test fails this will not be executed')\r",
							"})\r",
							"pm.test(\"Checking data type2\",function(){\r",
							"pm.expect(abc.email).to.be.an(\"string\")\r",
							"})\r",
							"pm.test(\"Checking data type3\",function(){\r",
							"pm.expect(abc.id).to.be.an(\"number\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}{{endpoint}}",
					"host": [
						"{{BaseUrl}}{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register-Unsuccessful",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{email}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BaseUrl}}{{endpoint}}",
					"host": [
						"{{BaseUrl}}{{endpoint}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Response time is less than 200ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(200);",
					"});",
					"//if we want to skip a test",
					"//pm.test.skip(\"Skip\",function(){",
					"    //pm.response.to.have.status(200)})"
				]
			}
		}
	],
	"variable": [
		{
			"key": "BaseUrl",
			"value": "",
			"type": "string"
		}
	]
}